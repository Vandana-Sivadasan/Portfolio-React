{"version":3,"sources":["data/images/picture.jpg","logo.svg","components/Header.js","components/ScrollTest.js","components/AboutSection.js","components/ProjectSection.js","components/ContactSection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Example","props","useState","collapsed","setCollapsed","Navbar","color","light","NavbarBrand","href","className","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","activeClass","to","spy","smooth","offset","duration","React","Component","Footer","name","Row","Col","xs","md","src","bioImage","style","width","title","description","github","demo","map","project","index","lg","margin","border","Form","inline","FormGroup","Label","for","Input","type","id","placeholder","Button","App","Header","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b5af2ec2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture.fd0956ed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport { Link, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nconst Example = (props) => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  return (\n    <div>\n      <Navbar color=\"faded\" light>\n        <NavbarBrand href=\"/\" className=\"mr-auto\">About Me</NavbarBrand>\n        <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n        <Collapse isOpen={!collapsed} navbar>\n          <Nav navbar>\n            <NavItem>\n              <Link activeClass=\"active\" to=\"aboutSection\" spy={true} smooth={true} offset={0} duration={1000}>\n                About\n              </Link>\n            </NavItem>\n            \n            <NavItem>\n              <Link activeClass=\"active\" to=\"projectSection\" spy={true} smooth={true} offset={0} duration={1000}>\n                Projects\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link activeClass=\"active\" to=\"contactSection\" spy={true} smooth={true} offset={0} duration={1000}>\n                Contact\n              </Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default Example;","// ES6 Imports\nimport React from \"react\";\nimport * as Scroll from 'react-scroll';\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n \n \n \n \nclass Section extends React.Component {\n\n  render() {\n  \treturn (\n      <div>\n        <Link activeClass=\"active\" to=\"secondInsideContainer\" spy={true} smooth={true} offset={50} duration={500}>\n          Test 1\n        </Link>\n        <Link activeClass=\"active\" to=\"test1\" spy={true} smooth={true} offset={50} duration={500} delay={1000}>\n          Test 2 (delay)\n        </Link>\n        <Link className=\"test6\" to=\"anchor\" spy={true} smooth={true} duration={500}>\n          Test 6 (anchor)\n        </Link>\n        <button activeClass=\"active\" className=\"btn\" type=\"submit\" value=\"Test 2\" to=\"test2\" spy={true} smooth={true} offset={50} duration={500} >\n          Test 2\n        </button>\n \n        <Element name=\"test1\" className=\"element\">\n          test 1\n        </Element>\n \n        <Element name=\"test2\" className=\"element\">\n          test 2\n        </Element>\n \n        <div id=\"anchor\" className=\"element\">\n          test 6 (anchor)\n        </div>\n \n \n        <Link to=\"firstInsideContainer\" containerId=\"containerElement\">\n          Go to first element inside container\n        </Link>\n \n        <Link to=\"secondInsideContainer\" containerId=\"containerElement\">\n          Go to second element inside container\n        </Link>\n\n\n        <div className=\"element\" id=\"containerElement\" style={{marginTop:`2000px`}}>\n          <Element name=\"firstInsideContainer\">\n            first element inside container\n          </Element>\n \n          <Element name=\"secondInsideContainer\">\n            second element inside container\n          </Element>\n        </div>\n \n      </div>\n    );\n  }\n};\n \nexport default Section","import React from 'react';\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\nimport { Row, Col } from \"reactstrap\"\nimport bioImage from \"../data/images/picture.jpg\";\n\nexport default function Footer() {\n  return (\n    <Element name=\"aboutSection\" className=\"section\">\n      \n      <h1>Hi! I'm Vandana</h1>\n      \n        <Row>\n          <Col xs={12} md={6}>\n            <img src={bioImage} style={{width:`50%`}}/>\n          </Col>\n          <Col xs={12} md={6}>\n          <p>\n          I am a Software Developer.My goal is to achieve success in the IT Industry.I played major role as a Project\n            Manager.I can be a good asset to the company.Fluent in oral and written communication. Computer languages\n            that i know are, C++ C SQL HTML CSS JAVASCRIPT Codejs,My SQL,Mongo DB,Mongoose.\n        </p>\n          </Col>\n        </Row>\n    </Element>\n  );\n}","import React from 'react';\nimport { github, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\nimport { Row, Col } from \"reactstrap\"\nexport default function Footer() {\n\n  const projects = [\n    {\n      title: \"Project 1\",\n      description: \"Project 1 description\",\n      github: \"https://github.com/mibaska/Project01\",\n      demo: \"https://mibaska.github.io/Project01/starwars-quiz.html\"\n    },\n    {\n      title: \"Project 2\",\n      description: \"Project 2 description\",\n      github: \"https://mibaska.github.io/Project01/starwars-quiz.html\",\n      demo: \"https://immense-wildwood-98172.herokuapp.com\"\n    },\n    {\n      title: \"Project 3\",\n      description: \"Project 3 description\",\n      github: \"https://github.com/algarran/finalproject\",\n      demo: \"\"\n    },\n    {\n      title: \"Project 4\",\n      description: \"Project 4 description\",\n      github: \"\",\n      demo: \"\"\n    },\n  ]\n\n  return (\n    <Element name=\"projectSection\" className=\"section\">\n      <h1>Project Section</h1>\n\n      {projects.map((project, index) => {\n\n        return (\n          <Col xs={12} md={6} lg={4}>\n              <div style={{margin:`10px`, border:`1px solid black`}}>\n                <h3>{project.title}</h3>\n                <p>{project.description}</p>\n                <a href={project.github}>GitHub Link</a><br/>\n                <a href={project.demo}>Live Demo</a>\n              </div>\n          </Col>\n        )\n      })}\n\n    </Element>\n  );\n}","import React from 'react';\nimport { Link, Element , Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\nimport { Row, Col, FormGroup,Label,Input,Button,Form } from \"reactstrap\";\n\n\nexport default function Footer() {\n  return (\n    <Element name=\"contactSection\" className=\"section\">\n      <h1>Contact Section</h1>\n      <Row>\n        <Col xs={6}>\n          <a href=\"https://www.linkedin.com/in/vandana-sivadasan-61aba5198/\">LinkedIn</a>\n        </Col>\n        <Col xs={6}>\n          <a href=\"https://github.com/Vandana-Sivadasan\">GitHub</a>\n        </Col>\n\n        <Col xs={12}>\n        <Form inline>\n      <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n        <Label for=\"examplename\" className=\"mr-sm-2\">name</Label>\n        <Input type=\"text\" name=\"name\" id=\"examplename\" placeholder=\"Name\" />\n      </FormGroup>\n      <FormGroup className=\"mb-2 mr-sm-2 mb-sm-0\">\n        <Label for=\"exampleemail\" className=\"mr-sm-2\">email</Label>\n        <Input type=\"email\" name=\"email\" id=\"exampleemail\" placeholder=\"Email!\" />\n      </FormGroup>\n      <Button>Submit</Button>\n    </Form>\n        \n        </Col>\n\n      </Row>\n    </Element>\n  );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport ScrollTest from \"./components/ScrollTest\";\nimport AboutSection from \"./components/AboutSection\";\nimport ProjectSection from \"./components/ProjectSection\";\nimport ContactSection from \"./components/ContactSection\";\nimport \"./style.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n        {/* Page Content goes here \n        <h1>Vandana</h1>\n      <Footer/> */}\n      <AboutSection/>\n      <ProjectSection/>\n      <ContactSection/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}